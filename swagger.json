{
  "openapi": "3.0.0",
  "info": {
    "title": "UserGame API Documentation",
    "description": "This is a Binar Academy Challenge documentation API Usergames. You can find\nthis project at [Github\nRepository](https://github.com/fauzanajipray/user-game-bejs-binar-challenge)\n",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "fauzan.a.pray@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://user-game-bejs.herokuapp.com",
      "description": "Production"
    },
    {
      "url": "http://localhost:3000/api",
      "description": "Local Development"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Everything about Authentication"
    },
    {
      "name": "Admin",
      "description": "Only Admin role can access this routes"
    },
    {
      "name": "User",
      "description": "All Roles can access this routes"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "authLogin",
        "requestBody": {
          "description": "Login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "authRegister",
        "requestBody": {
          "description": "User that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Forgot password - send OTP to email",
        "operationId": "authforgot",
        "requestBody": {
          "description": "Login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/forgotpassword_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password with OTP",
        "operationId": "authResetPassword",
        "requestBody": {
          "description": "Login credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resetpassword_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usergame": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all usergame",
        "operationId": "adminGetUsergames",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/usergame/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Usergame By ID",
        "operationId": "adminGetUsergame",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usergame to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Put Usergame By ID",
        "operationId": "adminPutUsergame",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usergame to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update data usergame",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usergame_userId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete Usergame By ID",
        "operationId": "adminDeleteUsergame",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usergame to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/usergame/{userId}/biodata": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Put Usergame Biodata By userId",
        "operationId": "adminPutUsergameBiodata",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usergame to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update data biodata",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/userId_biodata_body"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userId_biodata_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/history": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all Histories",
        "operationId": "adminGetHistories",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/history/{historyId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get History By historyId",
        "operationId": "adminGetHistory",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "description": "ID of history to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update History By historyId",
        "operationId": "adminPutHistory",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "description": "ID of history to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update data history",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/history_historyId_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete History By historyId",
        "operationId": "adminDeleteHistory",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "description": "ID of history to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get profile info",
        "operationId": "userGetProfile",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/profile/biodata": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get profile Biodata",
        "operationId": "userGetProfileBiodata",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Get profile Biodata",
        "operationId": "userPutProfileBiodata",
        "requestBody": {
          "description": "Update data biodata",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/profile_biodata_body"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profile_biodata_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/profile/history": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get profile Histories",
        "operationId": "userGetProfileHistories",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create profile History",
        "operationId": "userPostProfileHistory",
        "requestBody": {
          "description": "Update data history",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profile_history_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/profile/history/{historyId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get profile History",
        "operationId": "userGetProfileHistory",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "description": "ID of history to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Put profile History",
        "operationId": "userPutProfileHistory",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "description": "ID of history to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update data history",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/history_historyId_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete profile History",
        "operationId": "userDeleteProfileHistory",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "description": "ID of history to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "login_body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Kennedy_Wolf"
          },
          "password": {
            "type": "string",
            "example": "gj7pTZ1rAkNQJjW"
          }
        }
      },
      "register_body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Kennedy_Wolf"
          },
          "password": {
            "type": "string",
            "example": "gj7pTZ1rAkNQJjW"
          },
          "email": {
            "type": "string",
            "example": "contoh@email.com"
          },
          "first_name": {
            "type": "string",
            "example": "Kennedy"
          },
          "last_name": {
            "type": "string",
            "example": "Wolf"
          },
          "address": {
            "type": "string",
            "example": "Semarang"
          }
        }
      },
      "forgotpassword_body": {
        "type": "object",
        "properties": {
          "emailOrUsername": {
            "type": "string",
            "example": "Kennedy_Wolf"
          }
        }
      },
      "resetpassword_body": {
        "type": "object",
        "properties": {
          "emailOrUsername": {
            "type": "string",
            "example": "Kennedy_Wolf"
          },
          "otp": {
            "type": "string",
            "example": "376904"
          },
          "password": {
            "type": "string",
            "example": "123123123"
          }
        }
      },
      "usergame_userId_body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Kennedy_Wolf"
          },
          "password": {
            "type": "string",
            "example": "gj7pTZ1rAkNQJjW"
          }
        }
      },
      "userId_biodata_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "contoh@email.com"
          },
          "first_name": {
            "type": "string",
            "example": "Kennedy"
          },
          "last_name": {
            "type": "string",
            "example": "Wolf"
          },
          "address": {
            "type": "string",
            "example": "Semarang"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "userId_biodata_body_1": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "contoh@email.com"
          },
          "first_name": {
            "type": "string",
            "example": "Kennedy"
          },
          "last_name": {
            "type": "string",
            "example": "Wolf"
          },
          "address": {
            "type": "string",
            "example": "Semarang"
          }
        }
      },
      "history_historyId_body": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "example": 90
          },
          "time_played": {
            "type": "integer",
            "example": 1200000
          }
        }
      },
      "profile_biodata_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "contoh@email.com"
          },
          "first_name": {
            "type": "string",
            "example": "Kennedy"
          },
          "last_name": {
            "type": "string",
            "example": "Wolf"
          },
          "address": {
            "type": "string",
            "example": "Semarang"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "profile_biodata_body_1": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "contoh@email.com"
          },
          "first_name": {
            "type": "string",
            "example": "Kennedy"
          },
          "last_name": {
            "type": "string",
            "example": "Wolf"
          },
          "address": {
            "type": "string",
            "example": "Semarang"
          }
        }
      },
      "profile_history_body": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "example": 90
          },
          "time_played": {
            "type": "integer",
            "example": 1200000
          }
        }
      },
      "history_historyId_body_1": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "example": 90
          },
          "time_played": {
            "type": "integer",
            "example": 1200000
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}