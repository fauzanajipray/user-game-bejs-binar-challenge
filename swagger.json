{
  "swagger": "2.0",
  "info": {
    "description": "This is a Binar Academy Challenge documentation API Usergames. You can find this project at [Github Repository](https://github.com/fauzanajipray/user-game-bejs-binar-challenge)",
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "fauzan.a.pray@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "usergame",
      "description": "Everything about user game"
    },
    {
      "name": "history",
      "description": "History of Usergames"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/usergame": {
      "get": {
        "tags": [
          "usergame"
        ],
        "summary": "Find all data usergames",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findAllUserGame",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "username": {
                        "type": "string",
                        "example": "Kennedy_Wolf"
                      },
                      "password": {
                        "type": "string",
                        "example": "gj7pTZ1rAkNQJjW"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2022-04-04T17:35:13.707Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2022-04-04T17:35:13.707Z"
                      },
                      "userGameBiodata": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "first_name": {
                            "type": "string",
                            "example": "Clint"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "Gibson"
                          },
                          "address": {
                            "type": "string",
                            "example": "0556 Schuster Lake"
                          },
                          "email": {
                            "type": "string",
                            "example": "Clint_Gibson@gmail.com"
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2022-04-04T17:36:13.735Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2022-04-04T17:36:13.735Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "usergame"
        ],
        "summary": "Add a new usergame to the database",
        "description": "",
        "operationId": "addUserGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Usergames object that needs to be added to the database",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Kennedy_Wolf"
                },
                "password": {
                  "type": "string",
                  "example": "gj7pTZ1rAkNQJjW"
                },
                "first_name": {
                  "type": "string",
                  "example": "Clint"
                },
                "last_name": {
                  "type": "string",
                  "example": "Gibson"
                },
                "email": {
                  "type": "string",
                  "example": "Clint_Gibson@gmail.com"
                },
                "address": {
                  "type": "string",
                  "example": "0556 Schuster Lake"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Input success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UserGame created"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usergame/{id}": {
      "get": {
        "tags": [
          "usergame"
        ],
        "summary": "Find usergame by ID",
        "description": "",
        "operationId": "findOneUserGame",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The UserGame id that needs to be fetched. Use 1 for testing. ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "username": {
                        "type": "string",
                        "example": "Kennedy_Wolf"
                      },
                      "password": {
                        "type": "string",
                        "example": "gj7pTZ1rAkNQJjW"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2022-04-04T17:35:13.707Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2022-04-04T17:35:13.707Z"
                      },
                      "userGameBiodata": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "first_name": {
                            "type": "string",
                            "example": "Clint"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "Gibson"
                          },
                          "address": {
                            "type": "string",
                            "example": "0556 Schuster Lake"
                          },
                          "email": {
                            "type": "string",
                            "example": "Clint_Gibson@gmail.com"
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2022-04-04T17:36:13.735Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2022-04-04T17:36:13.735Z"
                          }
                        }
                      },
                      "userGameHistories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 5
                            },
                            "score": {
                              "type": "integer",
                              "example": 24
                            },
                            "time_played": {
                              "type": "integer",
                              "example": 1140000
                            },
                            "user_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2022-04-04T17:40:13.761Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2022-04-04T17:40:13.761Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UserGame not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "usergame"
        ],
        "summary": "Update usergame by ID",
        "description": "",
        "operationId": "UpdateUserGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The UserGame id that needs to be updated. Use 1 for testing. ",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Usergames object that needs to be added to the database",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Kennedy_Wolf"
                },
                "password": {
                  "type": "string",
                  "example": "gj7pTZ1rAkNQJjW"
                },
                "first_name": {
                  "type": "string",
                  "example": "Clint"
                },
                "last_name": {
                  "type": "string",
                  "example": "Gibson"
                },
                "email": {
                  "type": "string",
                  "example": "Clint_Gibson@gmail.com"
                },
                "address": {
                  "type": "string",
                  "example": "0556 Schuster Lake"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UserGame updated"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UserGame not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "usergame"
        ],
        "summary": "Delete usergame by ID",
        "description": "",
        "operationId": "DeleteUserGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The UserGame id that needs to be deleted. Use 1 for testing. ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UserGame deleted"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UserGame not found"
                }
              }
            }
          }
        }
      }
    },
    "/history": {
      "get": {
        "tags": [
          "history"
        ],
        "summary": "Find all data history",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findAllHistoryUserGame",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 5
                      },
                      "score": {
                        "type": "integer",
                        "example": 24
                      },
                      "time_played": {
                        "type": "integer",
                        "example": 1140000
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2022-04-04T17:40:13.761Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2022-04-04T17:40:13.761Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": [
          "history"
        ],
        "summary": "Find all data history",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "AddHistoryUserGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "History UserGames object that needs to be added to the database",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "integer",
                  "example": 24
                },
                "time_played": {
                  "type": "integer",
                  "example": 1140000
                },
                "user_game_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 5
                      },
                      "score": {
                        "type": "integer",
                        "example": 24
                      },
                      "time_played": {
                        "type": "integer",
                        "example": 1140000
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2022-04-04T17:40:13.761Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2022-04-04T17:40:13.761Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/history/{id}": {
      "get": {
        "tags": [
          "history"
        ],
        "summary": "Find history by ID",
        "description": "",
        "operationId": "findOneHistoryUserGame",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The History id that needs to be fetched. Use 18 for testing. ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 5
                      },
                      "score": {
                        "type": "integer",
                        "example": 24
                      },
                      "time_played": {
                        "type": "integer",
                        "example": 1140000
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2022-04-04T17:40:13.761Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2022-04-04T17:40:13.761Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "history"
        ],
        "summary": "Update usergame by ID",
        "description": "",
        "operationId": "UpdateHistoryUserGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The History id that needs to be updated. Use 1 for testing. ",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "History object that needs to be added to the database",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "integer",
                  "example": 24
                },
                "time_played": {
                  "type": "integer",
                  "example": 1140000
                },
                "user_game_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History updated",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "History updated"
                }
              }
            }
          },
          "404": {
            "description": "History not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "History not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "history"
        ],
        "summary": "Delete History by ID",
        "description": "",
        "operationId": "DeleteHistoryUserGame",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The History id that needs to be deleted. Use 1 for testing. ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Hitory deleted"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Hitory not found"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Usergame": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UsergameBiodata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "user_id":{
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UsergameBiodataHistory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "time_played": {
          "type": "integer",
          "format": "int64"
        },
        "user_id":{
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object/array"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}